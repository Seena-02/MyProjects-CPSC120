Create a linked list using this structure:

struct ListNode
{
    double value;
    ListNode *next;
    // Constructor.
    ListNode(double value1, ListNode *next1 = NULL)
    {
        value = value1;
        next = next1;  
    }
};

Create a Menu and add these operations to your linked list:

1. Reading from file and adding data to the linked list

2. Traversing the linked list

3. Adding a number to the linked list

4. destroying the linked list

test your program and make sure it works.

Submit a pdf file that has both your code and the output.





You can start with this code:

#include <iostream>
#include <fstream>
using namespace std;
struct ListNode
{
    double value;
    ListNode *next;
    // constructor
    ListNode(double value1, ListNode *next1 = NULL)
    {value = value1;next = next1;}
};
ListNode *numberList = NULL;

void createLinkedList()
{
    int number;
    ifstream numberFile("/Users/xeon/Documents/mi/linkedlist/linkedlist/file.txt");
    if (!numberFile) {
        cout << "Error in opening the file of numbers.";
        exit(1);
        
    }
    while (numberFile >> number){// create a node to hold this
        numberList = new ListNode(number, numberList);
    }
}
void traverseLinkedList()
{
    //traverse
    cout << "Traversing" << endl;
    ListNode *ptr = numberList;
    while (ptr != NULL)
    {
        cout << ptr->value << " ";
        // process
        ptr = ptr->next;
        // move to next node
        
    }
    cout << endl;
}
void addNumber()
{
    cout << "Adding ";
    
    
}
void removenumber()
{
    cout << "Removing";
    
}
void  destroy()
{
    cout << "destroying";
    
}
int main(int argc, const char * argv[]) {
    int choice;
    do{
    cout << "What do you want top do? " << endl;
    cout << "1. Crearte a linked list " << endl;
    cout << "2. Traverese a linked list" << endl;
    cout << "3. Add a number to the linked list" << endl;
    cout << "4. Remove a number fro the linked list" << endl;
    cout << "5. Destroy the linked List";
    cout << "6. Exit" << endl;
    cin >> choice;
    switch(choice)
    {
        case 1:
            createLinkedList();
            break;
        case 2:
            traverseLinkedList();
            break;
        case 3:
            addNumber();
            break;
        case 4:
            removenumber();
            break;
        case 5:
            destroy();
            break;
        case 6:
            return 0;
            break;
    }
    }while(1);
    
    

    
   
    return 0;
}
